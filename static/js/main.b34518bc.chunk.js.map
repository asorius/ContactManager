{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/InputGroup.js","components/contacts/addContact.js","components/pages/about.js","components/pages/NotFound.js","components/test/test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","_componentDidMount","inherits","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","color","float","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","InputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_InputGroup","about","NotFound","test","title","body","fetch","then","response","json","console","log","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","About","Test","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAGMA,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IACvB,SAAAL,GAAO,OACLA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGZ,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,IAAAe,EAAA,OAAA5B,OAAA6B,EAAA,EAAA7B,CAAAU,EAAAC,GAAAX,OAAA8B,EAAA,EAAA9B,CAAAU,EAAA,EAAAqB,IAAA,oBAAAC,OAAAJ,EAAA5B,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQsBC,IAAMC,IAAI,8CARhC,OAQUN,EARVE,EAAAK,KAUI9B,KAAKY,SAAS,CACZzB,SAAUoC,EAAIQ,OAXpB,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,kBAAAa,EAAAH,MAAAV,KAAAE,cAAA,CAAAc,IAAA,SAAAC,MAAA,WAeI,OACEgB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBsB,MAAOjB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAjBpBzC,EAAA,CAA8B0C,aAuBjBC,EAAW5D,EAAQ4D,iBCOjBC,6MAxDbzD,MAAQ,CACN0D,iBAAiB,KAEnBC,YAAc,SAAAC,GACZ5C,EAAKc,SAAS,CAAE4B,iBAAkB1C,EAAKhB,MAAM0D,qBAE/CG,oDAAgB,SAAArB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMgB,OAAN,8CAAApD,OAA2DF,IADnD,OAEdqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAF9B,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAIP,IAAA6C,EAAA7C,KAAA8C,EAC4B9C,KAAKmC,MAAM9C,QAAtCC,EADDwD,EACCxD,GAAIyD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBT,EAAoBxC,KAAKlB,MAAzB0D,gBAER,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAArB,GAAS,IACAN,EAAaM,EAAbN,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,uBACbjB,EAAAb,EAAAc,cAAA,UACGa,EAAM,IACPd,EAAAb,EAAAc,cAAA,KAAGiB,QAASN,EAAKJ,YAAaS,UAAU,qBACxCjB,EAAAb,EAAAc,cAAA,KACEgB,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,MAAOC,MAAO,SACjDJ,QAASN,EAAKF,cAAca,KAAKX,EAAMvD,EAAIqB,KAE7CsB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAE,kBAAAlE,OAAoBF,IAC1B2C,EAAAb,EAAAc,cAAA,KACEgB,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPK,YAAa,OACbJ,MAAO,aAKdf,EACCP,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,cACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAwCF,GACxCf,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,mBAAd,UAAwCD,IAExC,eA9CIZ,aCFDuB,mLAEjB,OACE3B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAArB,GAAS,IACA9B,EAAa8B,EAAb9B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMyC,SAAP,KACE5B,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,kBACZjB,EAAAb,EAAAc,cAAA,QAAMgB,UAAU,eAAhB,WADF,SAGC/D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC4B,EAAD,CAAS9C,IAAK3B,EAAQC,GAAID,QAASA,gBAZbgD,aCAhC0B,EAAS,SAAA5B,GAAS,IACd6B,EAAa7B,EAAb6B,SACR,OACE/B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,2DACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,KAAG+B,KAAK,IAAIf,UAAU,gBACnBc,GAEH/B,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,sBACZjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBADf,UAIFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,gBADf,QAKFjB,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,YACZjB,EAAAb,EAAAc,cAACuB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1BjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,oBADf,eAWda,EAAOG,aAAe,CACpBF,SAAU,UAKGD,yCCvCTI,EAAa,SAAAC,GAQb,IAPJC,EAOID,EAPJC,MACAtB,EAMIqB,EANJrB,KACA9B,EAKImD,EALJnD,MACAjC,EAIIoF,EAJJpF,KACAsF,EAGIF,EAHJE,YACAC,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEvC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,cACbjB,EAAAb,EAAAc,cAAA,SAAOuC,QAAS1B,GAAOsB,GACvBpC,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN+D,KAAMA,EACNG,UAAWwB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbrD,MAAOA,EACPsD,SAAUA,IAEXC,GAASvC,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,oBAAoBsB,KAanDL,EAAWD,aAAe,CACxBlF,KAAM,QAEOmF,QCrCMS,6MACnB9F,MAAQ,CACNiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,MAEVC,+CAAW,SAAAxD,EAAOX,EAAU+B,GAAjB,IAAAqC,EAAAhC,EAAAC,EAAAC,EAAA+B,EAAAzD,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEuC,iBADOF,EAEsBjF,EAAKhB,MAA5BiE,EAFCgC,EAEDhC,KAAMC,EAFL+B,EAEK/B,MAAOC,EAFZ8B,EAEY9B,MAER,KAATF,EAJK,CAAAtB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE9B,KAAM,sBALzBtB,EAAAyD,OAAA,oBAQK,KAAVlC,EARK,CAAAvB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,MAAO,uBAT1BvB,EAAAyD,OAAA,oBAYK,KAAVjC,EAZK,CAAAxB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE5B,MAAO,uBAb1BxB,EAAAyD,OAAA,yBAiBHF,EAAa,CACjBjC,OACAC,QACAC,SApBOxB,EAAAE,KAAA,GAuBSC,IAAMuD,KACtB,6CACAH,GAzBO,QAuBHzD,EAvBGE,EAAAK,KA2BTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAC7CjC,EAAKc,SAAS,CACZmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAEV/E,EAAKqC,MAAMiD,QAAQC,KAAK,KAlCf,yBAAA5D,EAAAO,SAAAV,EAAAtB,mEAoCXuE,SAAW,SAAA7B,GAAC,OAAI5C,EAAKc,SAAL3B,OAAAqG,EAAA,EAAArG,CAAA,GAAiByD,EAAE6C,OAAOxC,KAAOL,EAAE6C,OAAOtE,iFACjD,IAAA4B,EAAA7C,KAAAwF,EACgCxF,KAAKlB,MAApCiE,EADDyC,EACCzC,KAAMC,EADPwC,EACOxC,MAAOC,EADduC,EACcvC,MAAO4B,EADrBW,EACqBX,OAC5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAArB,GAAS,IACAN,EAAaM,EAAbN,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,eACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAM4C,SAAUjC,EAAKiC,SAAStB,KAAKX,EAAMlC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,OACNtB,KAAK,OACLuB,YAAY,gBACZrD,MAAO8B,EACPwB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO9B,OAEhBd,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,QACNtB,KAAK,QACL/D,KAAK,QACLsF,YAAY,iBACZrD,MAAO+B,EACPuB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO7B,QAEhBf,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,QACNtB,KAAK,QACLuB,YAAY,iBACZrD,MAAOgC,EACPsB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO5B,QAEhBhB,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLiC,MAAM,cACNiC,UAAU,8BAnFUb,qCCHzBqD,EAAA,WACb,OACEzD,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,yBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,iCACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,kBAAb,mBCLSyC,EAAA,WACb,OACE1D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIgB,UAAU,aAAd,sBACAjB,EAAAb,EAAAc,cAAA,KAAGgB,UAAU,QAAb,qCCJe0C,6MACnB9G,MAAQ,CACN+G,MAAO,GACPC,KAAM,uFAEY,IAAAjD,EAAA7C,KAClB+F,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAjE,GAAI,OACRc,EAAKjC,SAAS,CACZiF,MAAO9D,EAAK8D,MACZC,KAAM/D,EAAK+D,SAGjBK,QAAQC,IAAI,4CAUL,IAAArB,EACiB/E,KAAKlB,MAArB+G,EADDd,EACCc,MAAOC,EADRf,EACQe,KACf,OACE7D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,kBACAD,EAAAb,EAAAc,cAAA,UAAK2D,GACL5D,EAAAb,EAAAc,cAAA,SAAI4D,WA9BsBzD,aCGbgE,6MACnBvH,MAAQ,CACNiE,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,MAeVC,+CAAW,SAAAxD,EAAOX,EAAU+B,GAAjB,IAAAqC,EAAAhC,EAAAC,EAAAC,EAAAqD,EAAAhH,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEuC,iBADOF,EAEsBjF,EAAKhB,MAA5BiE,EAFCgC,EAEDhC,KAAMC,EAFL+B,EAEK/B,MAAOC,EAFZ8B,EAEY9B,MAER,KAATF,EAJK,CAAAtB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE9B,KAAM,sBALzBtB,EAAAyD,OAAA,oBAQK,KAAVlC,EARK,CAAAvB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE7B,MAAO,uBAT1BvB,EAAAyD,OAAA,oBAYK,KAAVjC,EAZK,CAAAxB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEiE,OAAQ,CAAE5B,MAAO,uBAb1BxB,EAAAyD,OAAA,yBAgBHoB,EAAa,CAAEvD,OAAMC,QAAOC,SAC1B3D,EAAOQ,EAAKqC,MAAMoE,MAAMC,OAAxBlH,GAjBCmC,EAAAE,KAAA,GAkBSC,IAAM6E,IAAN,8CAAAjH,OAC8BF,GAC9CgH,GApBO,QAkBH/E,EAlBGE,EAAAK,KAsBTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAChDjC,EAAKc,SAAS,CACZmC,KAAM,GACNC,MAAO,GACPC,MAAO,GACP4B,OAAQ,KAEV/E,EAAKqC,MAAMiD,QAAQC,KAAK,KA7Bf,yBAAA5D,EAAAO,SAAAV,EAAAtB,mEA+BXuE,SAAW,SAAA7B,GAAC,OAAI5C,EAAKc,SAAL3B,OAAAqG,EAAA,EAAArG,CAAA,GAAiByD,EAAE6C,OAAOxC,KAAOL,EAAE6C,OAAOtE,6MA1ChD3B,EAAOU,KAAKmC,MAAMoE,MAAMC,OAAxBlH,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAGAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACZmC,KAAM1D,EAAQ0D,KACdC,MAAO3D,EAAQ2D,MACfC,MAAO5D,EAAQ4D,kIAmCV,IAAAJ,EAAA7C,KAAAwF,EACgCxF,KAAKlB,MAApCiE,EADDyC,EACCzC,KAAMC,EADPwC,EACOxC,MAAOC,EADduC,EACcvC,MAAO4B,EADrBW,EACqBX,OAC5B,OACE5C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAArB,GAAS,IACAN,EAAaM,EAAbN,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,eAAf,gBACAjB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAA,QAAM4C,SAAUjC,EAAKiC,SAAStB,KAAKX,EAAMlC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,OACNtB,KAAK,OACLuB,YAAY,gBACZrD,MAAO8B,EACPwB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO9B,OAEhBd,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,QACNtB,KAAK,QACL/D,KAAK,QACLsF,YAAY,iBACZrD,MAAO+B,EACPuB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO7B,QAEhBf,EAAAb,EAAAc,cAACuD,EAAD,CACEpB,MAAM,QACNtB,KAAK,QACLuB,YAAY,iBACZrD,MAAOgC,EACPsB,SAAU1B,EAAK0B,SACfC,MAAOK,EAAO5B,QAEhBhB,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLiC,MAAM,iBACNiC,UAAU,8BA3FWb,aCmC1BqE,mLA1BX,OACEzE,EAAAb,EAAAc,cAACyE,EAAD,KACE1E,EAAAb,EAAAc,cAAC0E,EAAA,EAAD,KACE3E,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACbjB,EAAAb,EAAAc,cAAC2E,EAAD,CAAQ7C,SAAS,oBACjB/B,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,aACbjB,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,KACE7E,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC3B,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWtC,IAC5C3C,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,qBACLC,UAAWb,IAEbpE,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtClF,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAAKC,UAAWE,IAClCnF,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,CAAOG,UAAWvB,gBAlBhBtD,aCFEgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCXNkB,IAASC,OAAOzF,EAAAb,EAAAc,cAACyF,EAAD,MAASC,SAASC,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhC,KAAK,SAAAiC,GACjCA,EAAaC","file":"static/js/main.b34518bc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i onClick={this.onShowClick} className=\"fas fa-sort-down\" />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`/contacts/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      color: 'black',\n                      marginRight: '1rem',\n                      float: 'right'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nexport default class Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\nHeader.defaultProps = {\n  branding: 'My App'\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst InputGroup = ({\n  label,\n  name,\n  value,\n  type,\n  placeholder,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string\n};\nInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default InputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport InputGroup from '../layout/InputGroup';\n\nexport default class AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n    this.props.history.push('/');\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <InputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <InputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <InputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nexport default class test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n    console.log('mounted');\n  }\n\n  //   componentWillMount() {\n  // console.log('will mount');\n  //   }\n\n  //   componentDidUpdate(){}\n  //\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>test</h1>\n        <h2>{title}</h2>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport InputGroup from '../layout/InputGroup';\n\nexport default class EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n    const updContact = { name, email, phone };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n    this.props.history.push('/');\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <InputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <InputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <InputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/addContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/pages/about';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/test';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route\n                  exact\n                  path=\"/contacts/edit/:id\"\n                  component={EditContact}\n                />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/t\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}